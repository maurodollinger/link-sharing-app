// Generated by Xata Codegen 0.29.4. Please do not edit.
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord
} from "@xata.io/client";
import { buildClient } from "@xata.io/client";

const tables = [
  {
    name: "users_links",
    columns: [
      { name: "json_data", type: "json", unique: true },
      { name: "user_id", type: "string", unique: false}
    ]
  },
  {
    name: "users",
    columns: [
      { name: "id", type: "string", unique: true },
      { name: "name", type: "string", unique: false}
    ]
  }
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Links = InferredTypes["users_links"];
export type LinksRecords = Links & XataRecord
export type Users = InferredTypes["users"];
export type UsersRecords = Users & XataRecord;

export type DatabaseSchema = {
  users_links: LinksRecords,
  users: UsersRecords
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://maurodollinger-s-workspace-17b8fq.us-east-1.xata.sh/db/link-sharing-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
